//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityGameFramework_Runtime_WebRequestComponentWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityGameFramework.Runtime.WebRequestComponent), typeof(UnityGameFramework.Runtime.GameFrameworkComponent));
		L.RegFunction("GetWebRequestInfo", GetWebRequestInfo);
		L.RegFunction("GetWebRequestInfos", GetWebRequestInfos);
		L.RegFunction("GetAllWebRequestInfos", GetAllWebRequestInfos);
		L.RegFunction("AddWebRequest", AddWebRequest);
		L.RegFunction("RemoveWebRequest", RemoveWebRequest);
		L.RegFunction("RemoveWebRequests", RemoveWebRequests);
		L.RegFunction("RemoveAllWebRequests", RemoveAllWebRequests);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("TotalAgentCount", get_TotalAgentCount, null);
		L.RegVar("FreeAgentCount", get_FreeAgentCount, null);
		L.RegVar("WorkingAgentCount", get_WorkingAgentCount, null);
		L.RegVar("WaitingTaskCount", get_WaitingTaskCount, null);
		L.RegVar("Timeout", get_Timeout, set_Timeout);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetWebRequestInfo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			GameFramework.TaskInfo o = obj.GetWebRequestInfo(arg0);
			ToLua.PushValue(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetWebRequestInfos(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
			string arg0 = ToLua.CheckString(L, 2);
			GameFramework.TaskInfo[] o = obj.GetWebRequestInfos(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetAllWebRequestInfos(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
				GameFramework.TaskInfo[] o = obj.GetAllWebRequestInfos();
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 2)
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
				System.Collections.Generic.List<GameFramework.TaskInfo> arg0 = (System.Collections.Generic.List<GameFramework.TaskInfo>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<GameFramework.TaskInfo>));
				obj.GetAllWebRequestInfos(arg0);
				return 0;
			}
			else if (count == 3)
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
				string arg0 = ToLua.CheckString(L, 2);
				System.Collections.Generic.List<GameFramework.TaskInfo> arg1 = (System.Collections.Generic.List<GameFramework.TaskInfo>)ToLua.CheckObject(L, 3, typeof(System.Collections.Generic.List<GameFramework.TaskInfo>));
				obj.GetAllWebRequestInfos(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityGameFramework.Runtime.WebRequestComponent.GetAllWebRequestInfos");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddWebRequest(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
				string arg0 = ToLua.CheckString(L, 2);
				int o = obj.AddWebRequest(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<int>(L, 3))
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
				string arg0 = ToLua.CheckString(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				int o = obj.AddWebRequest(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<byte[]>(L, 3))
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
				string arg0 = ToLua.CheckString(L, 2);
				byte[] arg1 = ToLua.CheckByteBuffer(L, 3);
				int o = obj.AddWebRequest(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<UnityEngine.WWWForm>(L, 3))
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
				string arg0 = ToLua.CheckString(L, 2);
				UnityEngine.WWWForm arg1 = (UnityEngine.WWWForm)ToLua.ToObject(L, 3);
				int o = obj.AddWebRequest(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<string>(L, 3))
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.ToString(L, 3);
				int o = obj.AddWebRequest(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<object>(L, 3))
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
				string arg0 = ToLua.CheckString(L, 2);
				object arg1 = ToLua.ToVarObject(L, 3);
				int o = obj.AddWebRequest(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes<int, object>(L, 3))
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
				string arg0 = ToLua.CheckString(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				object arg2 = ToLua.ToVarObject(L, 4);
				int o = obj.AddWebRequest(arg0, arg1, arg2);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes<byte[], int>(L, 3))
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
				string arg0 = ToLua.CheckString(L, 2);
				byte[] arg1 = ToLua.CheckByteBuffer(L, 3);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 4);
				int o = obj.AddWebRequest(arg0, arg1, arg2);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes<UnityEngine.WWWForm, int>(L, 3))
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
				string arg0 = ToLua.CheckString(L, 2);
				UnityEngine.WWWForm arg1 = (UnityEngine.WWWForm)ToLua.ToObject(L, 3);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 4);
				int o = obj.AddWebRequest(arg0, arg1, arg2);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes<string, int>(L, 3))
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.ToString(L, 3);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 4);
				int o = obj.AddWebRequest(arg0, arg1, arg2);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes<byte[], string>(L, 3))
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
				string arg0 = ToLua.CheckString(L, 2);
				byte[] arg1 = ToLua.CheckByteBuffer(L, 3);
				string arg2 = ToLua.ToString(L, 4);
				int o = obj.AddWebRequest(arg0, arg1, arg2);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes<UnityEngine.WWWForm, string>(L, 3))
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
				string arg0 = ToLua.CheckString(L, 2);
				UnityEngine.WWWForm arg1 = (UnityEngine.WWWForm)ToLua.ToObject(L, 3);
				string arg2 = ToLua.ToString(L, 4);
				int o = obj.AddWebRequest(arg0, arg1, arg2);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes<string, object>(L, 3))
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.ToString(L, 3);
				object arg2 = ToLua.ToVarObject(L, 4);
				int o = obj.AddWebRequest(arg0, arg1, arg2);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes<UnityEngine.WWWForm, object>(L, 3))
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
				string arg0 = ToLua.CheckString(L, 2);
				UnityEngine.WWWForm arg1 = (UnityEngine.WWWForm)ToLua.ToObject(L, 3);
				object arg2 = ToLua.ToVarObject(L, 4);
				int o = obj.AddWebRequest(arg0, arg1, arg2);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes<byte[], object>(L, 3))
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
				string arg0 = ToLua.CheckString(L, 2);
				byte[] arg1 = ToLua.CheckByteBuffer(L, 3);
				object arg2 = ToLua.ToVarObject(L, 4);
				int o = obj.AddWebRequest(arg0, arg1, arg2);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes<byte[], int, object>(L, 3))
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
				string arg0 = ToLua.CheckString(L, 2);
				byte[] arg1 = ToLua.CheckByteBuffer(L, 3);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 4);
				object arg3 = ToLua.ToVarObject(L, 5);
				int o = obj.AddWebRequest(arg0, arg1, arg2, arg3);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes<UnityEngine.WWWForm, int, object>(L, 3))
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
				string arg0 = ToLua.CheckString(L, 2);
				UnityEngine.WWWForm arg1 = (UnityEngine.WWWForm)ToLua.ToObject(L, 3);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 4);
				object arg3 = ToLua.ToVarObject(L, 5);
				int o = obj.AddWebRequest(arg0, arg1, arg2, arg3);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes<string, int, object>(L, 3))
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.ToString(L, 3);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 4);
				object arg3 = ToLua.ToVarObject(L, 5);
				int o = obj.AddWebRequest(arg0, arg1, arg2, arg3);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes<byte[], string, int>(L, 3))
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
				string arg0 = ToLua.CheckString(L, 2);
				byte[] arg1 = ToLua.CheckByteBuffer(L, 3);
				string arg2 = ToLua.ToString(L, 4);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 5);
				int o = obj.AddWebRequest(arg0, arg1, arg2, arg3);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes<UnityEngine.WWWForm, string, int>(L, 3))
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
				string arg0 = ToLua.CheckString(L, 2);
				UnityEngine.WWWForm arg1 = (UnityEngine.WWWForm)ToLua.ToObject(L, 3);
				string arg2 = ToLua.ToString(L, 4);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 5);
				int o = obj.AddWebRequest(arg0, arg1, arg2, arg3);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes<byte[], string, object>(L, 3))
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
				string arg0 = ToLua.CheckString(L, 2);
				byte[] arg1 = ToLua.CheckByteBuffer(L, 3);
				string arg2 = ToLua.ToString(L, 4);
				object arg3 = ToLua.ToVarObject(L, 5);
				int o = obj.AddWebRequest(arg0, arg1, arg2, arg3);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes<UnityEngine.WWWForm, string, object>(L, 3))
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
				string arg0 = ToLua.CheckString(L, 2);
				UnityEngine.WWWForm arg1 = (UnityEngine.WWWForm)ToLua.ToObject(L, 3);
				string arg2 = ToLua.ToString(L, 4);
				object arg3 = ToLua.ToVarObject(L, 5);
				int o = obj.AddWebRequest(arg0, arg1, arg2, arg3);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 6 && TypeChecker.CheckTypes<byte[], string, int, object>(L, 3))
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
				string arg0 = ToLua.CheckString(L, 2);
				byte[] arg1 = ToLua.CheckByteBuffer(L, 3);
				string arg2 = ToLua.ToString(L, 4);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 5);
				object arg4 = ToLua.ToVarObject(L, 6);
				int o = obj.AddWebRequest(arg0, arg1, arg2, arg3, arg4);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 6 && TypeChecker.CheckTypes<UnityEngine.WWWForm, string, int, object>(L, 3))
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
				string arg0 = ToLua.CheckString(L, 2);
				UnityEngine.WWWForm arg1 = (UnityEngine.WWWForm)ToLua.ToObject(L, 3);
				string arg2 = ToLua.ToString(L, 4);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 5);
				object arg4 = ToLua.ToVarObject(L, 6);
				int o = obj.AddWebRequest(arg0, arg1, arg2, arg3, arg4);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityGameFramework.Runtime.WebRequestComponent.AddWebRequest");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveWebRequest(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.RemoveWebRequest(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveWebRequests(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
			string arg0 = ToLua.CheckString(L, 2);
			int o = obj.RemoveWebRequests(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveAllWebRequests(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
			int o = obj.RemoveAllWebRequests();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TotalAgentCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)o;
			int ret = obj.TotalAgentCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index TotalAgentCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FreeAgentCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)o;
			int ret = obj.FreeAgentCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index FreeAgentCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_WorkingAgentCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)o;
			int ret = obj.WorkingAgentCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index WorkingAgentCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_WaitingTaskCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)o;
			int ret = obj.WaitingTaskCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index WaitingTaskCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Timeout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)o;
			float ret = obj.Timeout;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Timeout on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Timeout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.Timeout = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Timeout on a nil value");
		}
	}
}

