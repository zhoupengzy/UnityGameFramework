//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityGameFramework_Runtime_LoadDictionarySuccessEventArgsWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityGameFramework.Runtime.LoadDictionarySuccessEventArgs), typeof(GameFramework.Event.GameEventArgs));
		L.RegFunction("Create", Create);
		L.RegFunction("Clear", Clear);
		L.RegFunction("New", _CreateUnityGameFramework_Runtime_LoadDictionarySuccessEventArgs);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("EventId", get_EventId, null);
		L.RegVar("Id", get_Id, null);
		L.RegVar("DictionaryAssetName", get_DictionaryAssetName, null);
		L.RegVar("Duration", get_Duration, null);
		L.RegVar("UserData", get_UserData, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUnityGameFramework_Runtime_LoadDictionarySuccessEventArgs(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UnityGameFramework.Runtime.LoadDictionarySuccessEventArgs obj = new UnityGameFramework.Runtime.LoadDictionarySuccessEventArgs();
				ToLua.PushSealed(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UnityGameFramework.Runtime.LoadDictionarySuccessEventArgs.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Create(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameFramework.ReadDataSuccessEventArgs arg0 = (GameFramework.ReadDataSuccessEventArgs)ToLua.CheckObject(L, 1, typeof(GameFramework.ReadDataSuccessEventArgs));
			UnityGameFramework.Runtime.LoadDictionarySuccessEventArgs o = UnityGameFramework.Runtime.LoadDictionarySuccessEventArgs.Create(arg0);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityGameFramework.Runtime.LoadDictionarySuccessEventArgs obj = (UnityGameFramework.Runtime.LoadDictionarySuccessEventArgs)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.LoadDictionarySuccessEventArgs));
			obj.Clear();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_EventId(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, UnityGameFramework.Runtime.LoadDictionarySuccessEventArgs.EventId);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Id(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.LoadDictionarySuccessEventArgs obj = (UnityGameFramework.Runtime.LoadDictionarySuccessEventArgs)o;
			int ret = obj.Id;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Id on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DictionaryAssetName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.LoadDictionarySuccessEventArgs obj = (UnityGameFramework.Runtime.LoadDictionarySuccessEventArgs)o;
			string ret = obj.DictionaryAssetName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index DictionaryAssetName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Duration(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.LoadDictionarySuccessEventArgs obj = (UnityGameFramework.Runtime.LoadDictionarySuccessEventArgs)o;
			float ret = obj.Duration;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Duration on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UserData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.LoadDictionarySuccessEventArgs obj = (UnityGameFramework.Runtime.LoadDictionarySuccessEventArgs)o;
			object ret = obj.UserData;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index UserData on a nil value");
		}
	}
}

