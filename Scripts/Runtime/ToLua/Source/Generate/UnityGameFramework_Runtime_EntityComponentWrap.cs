//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityGameFramework_Runtime_EntityComponentWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityGameFramework.Runtime.EntityComponent), typeof(UnityGameFramework.Runtime.GameFrameworkComponent));
		L.RegFunction("HasEntityGroup", HasEntityGroup);
		L.RegFunction("GetEntityGroup", GetEntityGroup);
		L.RegFunction("GetAllEntityGroups", GetAllEntityGroups);
		L.RegFunction("AddEntityGroup", AddEntityGroup);
		L.RegFunction("HasEntity", HasEntity);
		L.RegFunction("GetEntity", GetEntity);
		L.RegFunction("GetEntities", GetEntities);
		L.RegFunction("GetAllLoadedEntities", GetAllLoadedEntities);
		L.RegFunction("GetAllLoadingEntityIds", GetAllLoadingEntityIds);
		L.RegFunction("IsLoadingEntity", IsLoadingEntity);
		L.RegFunction("IsValidEntity", IsValidEntity);
		L.RegFunction("ShowEntity", ShowEntity);
		L.RegFunction("HideEntity", HideEntity);
		L.RegFunction("HideAllLoadedEntities", HideAllLoadedEntities);
		L.RegFunction("HideAllLoadingEntities", HideAllLoadingEntities);
		L.RegFunction("GetParentEntity", GetParentEntity);
		L.RegFunction("GetChildEntityCount", GetChildEntityCount);
		L.RegFunction("GetChildEntity", GetChildEntity);
		L.RegFunction("GetChildEntities", GetChildEntities);
		L.RegFunction("AttachEntity", AttachEntity);
		L.RegFunction("DetachEntity", DetachEntity);
		L.RegFunction("DetachChildEntities", DetachChildEntities);
		L.RegFunction("SetEntityInstanceLocked", SetEntityInstanceLocked);
		L.RegFunction("SetInstancePriority", SetInstancePriority);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("EntityCount", get_EntityCount, null);
		L.RegVar("EntityGroupCount", get_EntityGroupCount, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HasEntityGroup(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
			string arg0 = ToLua.CheckString(L, 2);
			bool o = obj.HasEntityGroup(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetEntityGroup(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
			string arg0 = ToLua.CheckString(L, 2);
			GameFramework.Entity.IEntityGroup o = obj.GetEntityGroup(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetAllEntityGroups(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				GameFramework.Entity.IEntityGroup[] o = obj.GetAllEntityGroups();
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 2)
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				System.Collections.Generic.List<GameFramework.Entity.IEntityGroup> arg0 = (System.Collections.Generic.List<GameFramework.Entity.IEntityGroup>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<GameFramework.Entity.IEntityGroup>));
				obj.GetAllEntityGroups(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityGameFramework.Runtime.EntityComponent.GetAllEntityGroups");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddEntityGroup(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
			string arg0 = ToLua.CheckString(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			int arg4 = (int)LuaDLL.luaL_checknumber(L, 6);
			bool o = obj.AddEntityGroup(arg0, arg1, arg2, arg3, arg4);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HasEntity(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<int>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				bool o = obj.HasEntity(arg0);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<string>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				string arg0 = ToLua.ToString(L, 2);
				bool o = obj.HasEntity(arg0);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityGameFramework.Runtime.EntityComponent.HasEntity");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetEntity(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<int>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityGameFramework.Runtime.Entity o = obj.GetEntity(arg0);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<string>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				string arg0 = ToLua.ToString(L, 2);
				UnityGameFramework.Runtime.Entity o = obj.GetEntity(arg0);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityGameFramework.Runtime.EntityComponent.GetEntity");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetEntities(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				string arg0 = ToLua.CheckString(L, 2);
				UnityGameFramework.Runtime.Entity[] o = obj.GetEntities(arg0);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3)
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				string arg0 = ToLua.CheckString(L, 2);
				System.Collections.Generic.List<UnityGameFramework.Runtime.Entity> arg1 = (System.Collections.Generic.List<UnityGameFramework.Runtime.Entity>)ToLua.CheckObject(L, 3, typeof(System.Collections.Generic.List<UnityGameFramework.Runtime.Entity>));
				obj.GetEntities(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityGameFramework.Runtime.EntityComponent.GetEntities");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetAllLoadedEntities(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				UnityGameFramework.Runtime.Entity[] o = obj.GetAllLoadedEntities();
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 2)
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				System.Collections.Generic.List<UnityGameFramework.Runtime.Entity> arg0 = (System.Collections.Generic.List<UnityGameFramework.Runtime.Entity>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UnityGameFramework.Runtime.Entity>));
				obj.GetAllLoadedEntities(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityGameFramework.Runtime.EntityComponent.GetAllLoadedEntities");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetAllLoadingEntityIds(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				int[] o = obj.GetAllLoadingEntityIds();
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 2)
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				System.Collections.Generic.List<int> arg0 = (System.Collections.Generic.List<int>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<int>));
				obj.GetAllLoadingEntityIds(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityGameFramework.Runtime.EntityComponent.GetAllLoadingEntityIds");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsLoadingEntity(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.IsLoadingEntity(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsValidEntity(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
			UnityGameFramework.Runtime.Entity arg0 = (UnityGameFramework.Runtime.Entity)ToLua.CheckObject(L, 2, typeof(UnityGameFramework.Runtime.Entity));
			bool o = obj.IsValidEntity(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowEntity(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 5)
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
				System.Type arg1 = ToLua.CheckMonoType(L, 3);
				string arg2 = ToLua.CheckString(L, 4);
				string arg3 = ToLua.CheckString(L, 5);
				obj.ShowEntity(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 6 && TypeChecker.CheckTypes<int>(L, 6))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
				System.Type arg1 = ToLua.CheckMonoType(L, 3);
				string arg2 = ToLua.CheckString(L, 4);
				string arg3 = ToLua.CheckString(L, 5);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 6);
				obj.ShowEntity(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 6 && TypeChecker.CheckTypes<object>(L, 6))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
				System.Type arg1 = ToLua.CheckMonoType(L, 3);
				string arg2 = ToLua.CheckString(L, 4);
				string arg3 = ToLua.CheckString(L, 5);
				object arg4 = ToLua.ToVarObject(L, 6);
				obj.ShowEntity(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 7)
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
				System.Type arg1 = ToLua.CheckMonoType(L, 3);
				string arg2 = ToLua.CheckString(L, 4);
				string arg3 = ToLua.CheckString(L, 5);
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 6);
				object arg5 = ToLua.ToVarObject(L, 7);
				obj.ShowEntity(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityGameFramework.Runtime.EntityComponent.ShowEntity");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HideEntity(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<int>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				obj.HideEntity(arg0);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes<UnityGameFramework.Runtime.Entity>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				UnityGameFramework.Runtime.Entity arg0 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 2);
				obj.HideEntity(arg0);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes<int, object>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				object arg1 = ToLua.ToVarObject(L, 3);
				obj.HideEntity(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes<UnityGameFramework.Runtime.Entity, object>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				UnityGameFramework.Runtime.Entity arg0 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 2);
				object arg1 = ToLua.ToVarObject(L, 3);
				obj.HideEntity(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityGameFramework.Runtime.EntityComponent.HideEntity");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HideAllLoadedEntities(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				obj.HideAllLoadedEntities();
				return 0;
			}
			else if (count == 2)
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				object arg0 = ToLua.ToVarObject(L, 2);
				obj.HideAllLoadedEntities(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityGameFramework.Runtime.EntityComponent.HideAllLoadedEntities");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HideAllLoadingEntities(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
			obj.HideAllLoadingEntities();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetParentEntity(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<int>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityGameFramework.Runtime.Entity o = obj.GetParentEntity(arg0);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<UnityGameFramework.Runtime.Entity>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				UnityGameFramework.Runtime.Entity arg0 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 2);
				UnityGameFramework.Runtime.Entity o = obj.GetParentEntity(arg0);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityGameFramework.Runtime.EntityComponent.GetParentEntity");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetChildEntityCount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int o = obj.GetChildEntityCount(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetChildEntity(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<int>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityGameFramework.Runtime.Entity o = obj.GetChildEntity(arg0);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<GameFramework.Entity.IEntity>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				GameFramework.Entity.IEntity arg0 = (GameFramework.Entity.IEntity)ToLua.ToObject(L, 2);
				UnityGameFramework.Runtime.Entity o = obj.GetChildEntity(arg0);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityGameFramework.Runtime.EntityComponent.GetChildEntity");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetChildEntities(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<int>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityGameFramework.Runtime.Entity[] o = obj.GetChildEntities(arg0);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<UnityGameFramework.Runtime.Entity>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				UnityGameFramework.Runtime.Entity arg0 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 2);
				UnityGameFramework.Runtime.Entity[] o = obj.GetChildEntities(arg0);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<int, System.Collections.Generic.List<GameFramework.Entity.IEntity>>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				System.Collections.Generic.List<GameFramework.Entity.IEntity> arg1 = (System.Collections.Generic.List<GameFramework.Entity.IEntity>)ToLua.ToObject(L, 3);
				obj.GetChildEntities(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes<GameFramework.Entity.IEntity, System.Collections.Generic.List<GameFramework.Entity.IEntity>>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				GameFramework.Entity.IEntity arg0 = (GameFramework.Entity.IEntity)ToLua.ToObject(L, 2);
				System.Collections.Generic.List<GameFramework.Entity.IEntity> arg1 = (System.Collections.Generic.List<GameFramework.Entity.IEntity>)ToLua.ToObject(L, 3);
				obj.GetChildEntities(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityGameFramework.Runtime.EntityComponent.GetChildEntities");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AttachEntity(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3 && TypeChecker.CheckTypes<int, int>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				obj.AttachEntity(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes<int, UnityGameFramework.Runtime.Entity>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityGameFramework.Runtime.Entity arg1 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 3);
				obj.AttachEntity(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes<UnityGameFramework.Runtime.Entity, int>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				UnityGameFramework.Runtime.Entity arg0 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				obj.AttachEntity(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes<UnityGameFramework.Runtime.Entity, UnityGameFramework.Runtime.Entity>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				UnityGameFramework.Runtime.Entity arg0 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 2);
				UnityGameFramework.Runtime.Entity arg1 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 3);
				obj.AttachEntity(arg0, arg1);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<int, int, string>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				string arg2 = ToLua.ToString(L, 4);
				obj.AttachEntity(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<int, int, UnityEngine.Transform>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.Transform arg2 = (UnityEngine.Transform)ToLua.ToObject(L, 4);
				obj.AttachEntity(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<int, int, object>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				object arg2 = ToLua.ToVarObject(L, 4);
				obj.AttachEntity(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<int, UnityGameFramework.Runtime.Entity, string>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityGameFramework.Runtime.Entity arg1 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 3);
				string arg2 = ToLua.ToString(L, 4);
				obj.AttachEntity(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<int, UnityGameFramework.Runtime.Entity, UnityEngine.Transform>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityGameFramework.Runtime.Entity arg1 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 3);
				UnityEngine.Transform arg2 = (UnityEngine.Transform)ToLua.ToObject(L, 4);
				obj.AttachEntity(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<int, UnityGameFramework.Runtime.Entity, object>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityGameFramework.Runtime.Entity arg1 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 3);
				object arg2 = ToLua.ToVarObject(L, 4);
				obj.AttachEntity(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<UnityGameFramework.Runtime.Entity, int, string>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				UnityGameFramework.Runtime.Entity arg0 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				string arg2 = ToLua.ToString(L, 4);
				obj.AttachEntity(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<UnityGameFramework.Runtime.Entity, int, UnityEngine.Transform>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				UnityGameFramework.Runtime.Entity arg0 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.Transform arg2 = (UnityEngine.Transform)ToLua.ToObject(L, 4);
				obj.AttachEntity(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<UnityGameFramework.Runtime.Entity, int, object>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				UnityGameFramework.Runtime.Entity arg0 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				object arg2 = ToLua.ToVarObject(L, 4);
				obj.AttachEntity(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<UnityGameFramework.Runtime.Entity, UnityGameFramework.Runtime.Entity, UnityEngine.Transform>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				UnityGameFramework.Runtime.Entity arg0 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 2);
				UnityGameFramework.Runtime.Entity arg1 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 3);
				UnityEngine.Transform arg2 = (UnityEngine.Transform)ToLua.ToObject(L, 4);
				obj.AttachEntity(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<UnityGameFramework.Runtime.Entity, UnityGameFramework.Runtime.Entity, string>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				UnityGameFramework.Runtime.Entity arg0 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 2);
				UnityGameFramework.Runtime.Entity arg1 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 3);
				string arg2 = ToLua.ToString(L, 4);
				obj.AttachEntity(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<UnityGameFramework.Runtime.Entity, UnityGameFramework.Runtime.Entity, object>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				UnityGameFramework.Runtime.Entity arg0 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 2);
				UnityGameFramework.Runtime.Entity arg1 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 3);
				object arg2 = ToLua.ToVarObject(L, 4);
				obj.AttachEntity(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes<int, int, string, object>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				string arg2 = ToLua.ToString(L, 4);
				object arg3 = ToLua.ToVarObject(L, 5);
				obj.AttachEntity(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes<int, int, UnityEngine.Transform, object>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.Transform arg2 = (UnityEngine.Transform)ToLua.ToObject(L, 4);
				object arg3 = ToLua.ToVarObject(L, 5);
				obj.AttachEntity(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes<int, UnityGameFramework.Runtime.Entity, string, object>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityGameFramework.Runtime.Entity arg1 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 3);
				string arg2 = ToLua.ToString(L, 4);
				object arg3 = ToLua.ToVarObject(L, 5);
				obj.AttachEntity(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes<int, UnityGameFramework.Runtime.Entity, UnityEngine.Transform, object>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityGameFramework.Runtime.Entity arg1 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 3);
				UnityEngine.Transform arg2 = (UnityEngine.Transform)ToLua.ToObject(L, 4);
				object arg3 = ToLua.ToVarObject(L, 5);
				obj.AttachEntity(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes<UnityGameFramework.Runtime.Entity, int, string, object>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				UnityGameFramework.Runtime.Entity arg0 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				string arg2 = ToLua.ToString(L, 4);
				object arg3 = ToLua.ToVarObject(L, 5);
				obj.AttachEntity(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes<UnityGameFramework.Runtime.Entity, int, UnityEngine.Transform, object>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				UnityGameFramework.Runtime.Entity arg0 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.Transform arg2 = (UnityEngine.Transform)ToLua.ToObject(L, 4);
				object arg3 = ToLua.ToVarObject(L, 5);
				obj.AttachEntity(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes<UnityGameFramework.Runtime.Entity, UnityGameFramework.Runtime.Entity, string, object>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				UnityGameFramework.Runtime.Entity arg0 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 2);
				UnityGameFramework.Runtime.Entity arg1 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 3);
				string arg2 = ToLua.ToString(L, 4);
				object arg3 = ToLua.ToVarObject(L, 5);
				obj.AttachEntity(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes<UnityGameFramework.Runtime.Entity, UnityGameFramework.Runtime.Entity, UnityEngine.Transform, object>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				UnityGameFramework.Runtime.Entity arg0 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 2);
				UnityGameFramework.Runtime.Entity arg1 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 3);
				UnityEngine.Transform arg2 = (UnityEngine.Transform)ToLua.ToObject(L, 4);
				object arg3 = ToLua.ToVarObject(L, 5);
				obj.AttachEntity(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityGameFramework.Runtime.EntityComponent.AttachEntity");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DetachEntity(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<int>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				obj.DetachEntity(arg0);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes<UnityGameFramework.Runtime.Entity>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				UnityGameFramework.Runtime.Entity arg0 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 2);
				obj.DetachEntity(arg0);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes<int, object>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				object arg1 = ToLua.ToVarObject(L, 3);
				obj.DetachEntity(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes<UnityGameFramework.Runtime.Entity, object>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				UnityGameFramework.Runtime.Entity arg0 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 2);
				object arg1 = ToLua.ToVarObject(L, 3);
				obj.DetachEntity(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityGameFramework.Runtime.EntityComponent.DetachEntity");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DetachChildEntities(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<int>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				obj.DetachChildEntities(arg0);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes<UnityGameFramework.Runtime.Entity>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				UnityGameFramework.Runtime.Entity arg0 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 2);
				obj.DetachChildEntities(arg0);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes<int, object>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				object arg1 = ToLua.ToVarObject(L, 3);
				obj.DetachChildEntities(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes<UnityGameFramework.Runtime.Entity, object>(L, 2))
			{
				UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
				UnityGameFramework.Runtime.Entity arg0 = (UnityGameFramework.Runtime.Entity)ToLua.ToObject(L, 2);
				object arg1 = ToLua.ToVarObject(L, 3);
				obj.DetachChildEntities(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityGameFramework.Runtime.EntityComponent.DetachChildEntities");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetEntityInstanceLocked(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
			UnityGameFramework.Runtime.Entity arg0 = (UnityGameFramework.Runtime.Entity)ToLua.CheckObject(L, 2, typeof(UnityGameFramework.Runtime.Entity));
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.SetEntityInstanceLocked(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetInstancePriority(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.EntityComponent));
			UnityGameFramework.Runtime.Entity arg0 = (UnityGameFramework.Runtime.Entity)ToLua.CheckObject(L, 2, typeof(UnityGameFramework.Runtime.Entity));
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.SetInstancePriority(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_EntityCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)o;
			int ret = obj.EntityCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index EntityCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_EntityGroupCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.EntityComponent obj = (UnityGameFramework.Runtime.EntityComponent)o;
			int ret = obj.EntityGroupCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index EntityGroupCount on a nil value");
		}
	}
}

