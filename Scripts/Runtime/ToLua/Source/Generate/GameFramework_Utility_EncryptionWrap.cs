//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GameFramework_Utility_EncryptionWrap
{
	public static void Register(LuaState L)
	{
		L.BeginStaticLibs("Encryption");
		L.RegFunction("GetQuickXorBytes", GetQuickXorBytes);
		L.RegFunction("GetQuickSelfXorBytes", GetQuickSelfXorBytes);
		L.RegFunction("GetXorBytes", GetXorBytes);
		L.RegFunction("GetSelfXorBytes", GetSelfXorBytes);
		L.EndStaticLibs();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetQuickXorBytes(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			byte[] arg0 = ToLua.CheckByteBuffer(L, 1);
			byte[] arg1 = ToLua.CheckByteBuffer(L, 2);
			byte[] o = GameFramework.Utility.Encryption.GetQuickXorBytes(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetQuickSelfXorBytes(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			byte[] arg0 = ToLua.CheckByteBuffer(L, 1);
			byte[] arg1 = ToLua.CheckByteBuffer(L, 2);
			GameFramework.Utility.Encryption.GetQuickSelfXorBytes(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetXorBytes(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				byte[] arg0 = ToLua.CheckByteBuffer(L, 1);
				byte[] arg1 = ToLua.CheckByteBuffer(L, 2);
				byte[] o = GameFramework.Utility.Encryption.GetXorBytes(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 4)
			{
				byte[] arg0 = ToLua.CheckByteBuffer(L, 1);
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
				byte[] arg3 = ToLua.CheckByteBuffer(L, 4);
				byte[] o = GameFramework.Utility.Encryption.GetXorBytes(arg0, arg1, arg2, arg3);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: GameFramework.Utility.Encryption.GetXorBytes");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetSelfXorBytes(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				byte[] arg0 = ToLua.CheckByteBuffer(L, 1);
				byte[] arg1 = ToLua.CheckByteBuffer(L, 2);
				GameFramework.Utility.Encryption.GetSelfXorBytes(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				byte[] arg0 = ToLua.CheckByteBuffer(L, 1);
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
				byte[] arg3 = ToLua.CheckByteBuffer(L, 4);
				GameFramework.Utility.Encryption.GetSelfXorBytes(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: GameFramework.Utility.Encryption.GetSelfXorBytes");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

