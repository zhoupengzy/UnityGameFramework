//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityGameFramework_Runtime_NetworkComponentWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityGameFramework.Runtime.NetworkComponent), typeof(UnityGameFramework.Runtime.GameFrameworkComponent));
		L.RegFunction("HasNetworkChannel", HasNetworkChannel);
		L.RegFunction("GetNetworkChannel", GetNetworkChannel);
		L.RegFunction("GetAllNetworkChannels", GetAllNetworkChannels);
		L.RegFunction("CreateNetworkChannel", CreateNetworkChannel);
		L.RegFunction("DestroyNetworkChannel", DestroyNetworkChannel);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("NetworkChannelCount", get_NetworkChannelCount, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HasNetworkChannel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityGameFramework.Runtime.NetworkComponent obj = (UnityGameFramework.Runtime.NetworkComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.NetworkComponent));
			string arg0 = ToLua.CheckString(L, 2);
			bool o = obj.HasNetworkChannel(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetNetworkChannel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityGameFramework.Runtime.NetworkComponent obj = (UnityGameFramework.Runtime.NetworkComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.NetworkComponent));
			string arg0 = ToLua.CheckString(L, 2);
			GameFramework.Network.INetworkChannel o = obj.GetNetworkChannel(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetAllNetworkChannels(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				UnityGameFramework.Runtime.NetworkComponent obj = (UnityGameFramework.Runtime.NetworkComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.NetworkComponent));
				GameFramework.Network.INetworkChannel[] o = obj.GetAllNetworkChannels();
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 2)
			{
				UnityGameFramework.Runtime.NetworkComponent obj = (UnityGameFramework.Runtime.NetworkComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.NetworkComponent));
				System.Collections.Generic.List<GameFramework.Network.INetworkChannel> arg0 = (System.Collections.Generic.List<GameFramework.Network.INetworkChannel>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<GameFramework.Network.INetworkChannel>));
				obj.GetAllNetworkChannels(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityGameFramework.Runtime.NetworkComponent.GetAllNetworkChannels");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateNetworkChannel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			UnityGameFramework.Runtime.NetworkComponent obj = (UnityGameFramework.Runtime.NetworkComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.NetworkComponent));
			string arg0 = ToLua.CheckString(L, 2);
			GameFramework.Network.ServiceType arg1 = (GameFramework.Network.ServiceType)ToLua.CheckObject(L, 3, typeof(GameFramework.Network.ServiceType));
			GameFramework.Network.INetworkChannelHelper arg2 = (GameFramework.Network.INetworkChannelHelper)ToLua.CheckObject<GameFramework.Network.INetworkChannelHelper>(L, 4);
			GameFramework.Network.INetworkChannel o = obj.CreateNetworkChannel(arg0, arg1, arg2);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DestroyNetworkChannel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityGameFramework.Runtime.NetworkComponent obj = (UnityGameFramework.Runtime.NetworkComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.NetworkComponent));
			string arg0 = ToLua.CheckString(L, 2);
			bool o = obj.DestroyNetworkChannel(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NetworkChannelCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.NetworkComponent obj = (UnityGameFramework.Runtime.NetworkComponent)o;
			int ret = obj.NetworkChannelCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index NetworkChannelCount on a nil value");
		}
	}
}

